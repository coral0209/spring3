spring 관련 jaf

- junit - test


- jstl 

- logback logging 

우리가 사용할 객체를 스프링 프레임워크(컨테이너) 에서 생성할 수 있도록 설명서를 작성(xml, java) 
(자바로도 할 수 있다. )


스프링 빈 객체를 주입 받을 수 있는 조건 : 주입을 받는 객체도 스프링 빈으로 등록이 되어 있어야 한다. 
즉 스프링 컨테이너에서 관리되는 객체여야 한다. 
ex)
userService 객체에 userDao 스프링 빈을 (Di) 주입 하려면 userService 객체도 스프링 빈이어야 한다. 

userService 객체가 스프링 빈이 아니지만 스프링 컨테이너(applicationContext) 객체를 참조 하고 있으면 
DL 은 가능하다. 

DI(주입) 방식 
1. SETTER : SETTER 메소드가 존재 해야함(XML , JAVA 설정 파일) 
2. 생성자 : 주입 받으려는 빈을 인자로 하는 생성자가 존재해야함(XML , JAVA 설정 파일)
3. ANNOTATION : @Resource , @Aurowired @Inject(xml , java 에서 설정가능하나 잘 드러나지 않음 ) -> 방법은 비슷  


----------------
scope : bean 의 속성 (id , class 속성까지 했었는데 여기에 scope 속성 추가)  :  singleton(default), prototype 이 존재 

디자인 패턴 - singleton 특정 클래스의 인스턴스가 메모리상에서 하나만 존재 하게 한다. (생성과 관련된 패턴) 

스프링 에서의 singleton 은 : id 당 하나의 객체를 만든다, bean 엘레먼트를 선언시 중복된 class 를 사용 가능하다. 
						동일한 클래스의 객체가 스프링 컨테이너 상에서는 여러개 존재하는 것이 가능하다. 
						스프링 컨테이너에서 빈의 식별 단위는 id
						
						
		ref,  value-ref  : 스프링 빈을 주입할 때 사용하는 속성  
							해당 속성에 들어오는 문자열은 스프링 빈의 이름(id) 이어야 한다. 
								<entry key="usernm" value="브라운" value-ref></entry>


bean 엘레먼트를 대체할 수 있는 방법
기존 : 스프링 빈을 하나씩 선언
	<bean 선언하려고 하는 갯수 만큼>
개선 : component-scan 이용 

	웹에서 자주 사용하는 모듈(레이어) - controller , service , repository(dao) 
	1.구현 클래스에 anotation 을 적용한다. -> (@Controller , @Service , @Repository)
	2. component-scan 엘레먼트를 xml 에 선언
		=> 특정 패키지 밑에 등록된 클래스를 스캔하면서
			@Controller , @Service , @Repository 어노테이션이 붙은 클래스들을 스프링 빈으로 등록 
			

